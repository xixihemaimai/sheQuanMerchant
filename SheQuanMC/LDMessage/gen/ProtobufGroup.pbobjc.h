// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufGroup.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DLMGroupCategoryInfoRsp;
@class DLMGroupInfoRsp;
@class DLMGroupUserAuditInfoRsp;
@class DLMGroupUserInfoRsp;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - DLMProtobufGroupRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface DLMProtobufGroupRoot : GPBRootObject
@end

#pragma mark - DLMCreateGroupReq

typedef GPB_ENUM(DLMCreateGroupReq_FieldNumber) {
  DLMCreateGroupReq_FieldNumber_GroupId = 1,
  DLMCreateGroupReq_FieldNumber_GroupName = 2,
  DLMCreateGroupReq_FieldNumber_UserIdsArray = 3,
};

/**
 * 创建聊天群（EventType.CreateGroup）
 **/
GPB_FINAL @interface DLMCreateGroupReq : GPBMessage

/** 客户端群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群聊名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupName;

/** 聊用户Ids */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt64Array *userIdsArray;
/** The number of items in @c userIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userIdsArray_Count;

@end

#pragma mark - DLMJoinGroupReq

typedef GPB_ENUM(DLMJoinGroupReq_FieldNumber) {
  DLMJoinGroupReq_FieldNumber_GroupId = 1,
  DLMJoinGroupReq_FieldNumber_UserIdsArray = 2,
};

/**
 * 加入群聊（EventType.JoinGroup）
 **/
GPB_FINAL @interface DLMJoinGroupReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 聊用户Ids */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt64Array *userIdsArray;
/** The number of items in @c userIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userIdsArray_Count;

@end

#pragma mark - DLMJoinCircleGroupReq

typedef GPB_ENUM(DLMJoinCircleGroupReq_FieldNumber) {
  DLMJoinCircleGroupReq_FieldNumber_GroupId = 1,
  DLMJoinCircleGroupReq_FieldNumber_CategoryId = 2,
};

/**
 * 圈子-加入圈子群聊（EventType.JoinCircleGroup）
 **/
GPB_FINAL @interface DLMJoinCircleGroupReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 圈子类目Id */
@property(nonatomic, readwrite) int32_t categoryId;

@end

#pragma mark - DLMInviteGroupReq

typedef GPB_ENUM(DLMInviteGroupReq_FieldNumber) {
  DLMInviteGroupReq_FieldNumber_GroupId = 1,
  DLMInviteGroupReq_FieldNumber_InviteUserId = 2,
};

/**
 * 邀请好友入群（EventType.InviteGroup）
 **/
GPB_FINAL @interface DLMInviteGroupReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 邀请用户Id */
@property(nonatomic, readwrite) uint64_t inviteUserId;

@end

#pragma mark - DLMRemoveGroupReq

typedef GPB_ENUM(DLMRemoveGroupReq_FieldNumber) {
  DLMRemoveGroupReq_FieldNumber_GroupId = 1,
  DLMRemoveGroupReq_FieldNumber_UserIdsArray = 2,
};

/**
 * 移除群聊（EventType.RemoveGroup）
 **/
GPB_FINAL @interface DLMRemoveGroupReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 聊用户Ids */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt64Array *userIdsArray;
/** The number of items in @c userIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userIdsArray_Count;

@end

#pragma mark - DLMQuitGroupReq

typedef GPB_ENUM(DLMQuitGroupReq_FieldNumber) {
  DLMQuitGroupReq_FieldNumber_GroupId = 1,
};

/**
 * 退出群聊（EventType.QuitGroup）
 **/
GPB_FINAL @interface DLMQuitGroupReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

@end

#pragma mark - DLMDismissGroupReq

typedef GPB_ENUM(DLMDismissGroupReq_FieldNumber) {
  DLMDismissGroupReq_FieldNumber_GroupId = 1,
};

/**
 * 解散群聊（EventType.DismissGroup）
 **/
GPB_FINAL @interface DLMDismissGroupReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

@end

#pragma mark - DLMGroupNoticeReq

typedef GPB_ENUM(DLMGroupNoticeReq_FieldNumber) {
  DLMGroupNoticeReq_FieldNumber_GroupId = 1,
  DLMGroupNoticeReq_FieldNumber_GroupNotice = 2,
};

/**
 * 群公告（EventType.GroupNotice）
 **/
GPB_FINAL @interface DLMGroupNoticeReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群公告 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupNotice;

@end

#pragma mark - DLMGroupHeadImgReq

typedef GPB_ENUM(DLMGroupHeadImgReq_FieldNumber) {
  DLMGroupHeadImgReq_FieldNumber_GroupId = 1,
  DLMGroupHeadImgReq_FieldNumber_HeadImg = 2,
};

/**
 * 群聊头像（EventType.GroupHeadImg）
 **/
GPB_FINAL @interface DLMGroupHeadImgReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *headImg;

@end

#pragma mark - DLMGroupQrCodeReq

typedef GPB_ENUM(DLMGroupQrCodeReq_FieldNumber) {
  DLMGroupQrCodeReq_FieldNumber_GroupId = 1,
};

/**
 * 群聊二维码（EventType.GroupQrCode）
 **/
GPB_FINAL @interface DLMGroupQrCodeReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

@end

#pragma mark - DLMGroupQrCodeRsp

typedef GPB_ENUM(DLMGroupQrCodeRsp_FieldNumber) {
  DLMGroupQrCodeRsp_FieldNumber_QrCode = 1,
};

/**
 * 群二维码 Base 64
 **/
GPB_FINAL @interface DLMGroupQrCodeRsp : GPBMessage

/** 群二维码 Base 64 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qrCode;

@end

#pragma mark - DLMGroupNameReq

typedef GPB_ENUM(DLMGroupNameReq_FieldNumber) {
  DLMGroupNameReq_FieldNumber_GroupId = 1,
  DLMGroupNameReq_FieldNumber_GroupName = 2,
};

/**
 * 群聊名称（EventType.GroupName）
 **/
GPB_FINAL @interface DLMGroupNameReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群聊名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupName;

@end

#pragma mark - DLMGroupNickNameReq

typedef GPB_ENUM(DLMGroupNickNameReq_FieldNumber) {
  DLMGroupNickNameReq_FieldNumber_GroupId = 1,
  DLMGroupNickNameReq_FieldNumber_NickName = 2,
};

/**
 * 本群昵称（EventType.GroupNickName）
 **/
GPB_FINAL @interface DLMGroupNickNameReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

@end

#pragma mark - DLMInviteApprovalReq

typedef GPB_ENUM(DLMInviteApprovalReq_FieldNumber) {
  DLMInviteApprovalReq_FieldNumber_GroupId = 1,
  DLMInviteApprovalReq_FieldNumber_InviteApproval = 2,
};

/**
 * 邀请确认（false：关、true：开）（EventType.InviteApproval）
 **/
GPB_FINAL @interface DLMInviteApprovalReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 邀请确认（false：关、true：开） */
@property(nonatomic, readwrite) BOOL inviteApproval;

@end

#pragma mark - DLMGroupMemberNickNameReq

typedef GPB_ENUM(DLMGroupMemberNickNameReq_FieldNumber) {
  DLMGroupMemberNickNameReq_FieldNumber_GroupId = 1,
  DLMGroupMemberNickNameReq_FieldNumber_IsGmnickName = 2,
};

/**
 * 显示群成员昵称（EventType.GroupUserNickName）
 **/
GPB_FINAL @interface DLMGroupMemberNickNameReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 显示群成员昵称（false：关、true：开） */
@property(nonatomic, readwrite) BOOL isGmnickName;

@end

#pragma mark - DLMToContactsReq

typedef GPB_ENUM(DLMToContactsReq_FieldNumber) {
  DLMToContactsReq_FieldNumber_GroupId = 1,
  DLMToContactsReq_FieldNumber_ToContacts = 2,
};

/**
 * 保存到通讯录（EventType.ToContacts）
 **/
GPB_FINAL @interface DLMToContactsReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 保存到通讯录（false：关、true：开） */
@property(nonatomic, readwrite) BOOL toContacts;

@end

#pragma mark - DLMNoSpeakReq

typedef GPB_ENUM(DLMNoSpeakReq_FieldNumber) {
  DLMNoSpeakReq_FieldNumber_GroupId = 1,
  DLMNoSpeakReq_FieldNumber_NoSpeak = 2,
};

/**
 * 群禁止发言（EventType.NoSpeak）
 **/
GPB_FINAL @interface DLMNoSpeakReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 禁止发言（false：关、true：开） */
@property(nonatomic, readwrite) BOOL noSpeak;

@end

#pragma mark - DLMOpenGroupReq

typedef GPB_ENUM(DLMOpenGroupReq_FieldNumber) {
  DLMOpenGroupReq_FieldNumber_GroupId = 1,
  DLMOpenGroupReq_FieldNumber_GroupIntroduction = 2,
  DLMOpenGroupReq_FieldNumber_CategoryId = 3,
  DLMOpenGroupReq_FieldNumber_OpenGroup = 4,
};

/**
 * 开放群（EventType.OpenGroup）
 **/
GPB_FINAL @interface DLMOpenGroupReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群介绍 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupIntroduction;

/** 群分类Id */
@property(nonatomic, readwrite) int32_t categoryId;

/** 是否开放群（0：关：1：开） */
@property(nonatomic, readwrite) int32_t openGroup;

@end

#pragma mark - DLMGroupUserNoSpeakReq

typedef GPB_ENUM(DLMGroupUserNoSpeakReq_FieldNumber) {
  DLMGroupUserNoSpeakReq_FieldNumber_GroupId = 1,
  DLMGroupUserNoSpeakReq_FieldNumber_GroupUserId = 2,
  DLMGroupUserNoSpeakReq_FieldNumber_NoSpeak = 3,
};

/**
 * 群成员禁止发言（EventType.GroupUserNoSpeak）
 **/
GPB_FINAL @interface DLMGroupUserNoSpeakReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群用户Id */
@property(nonatomic, readwrite) uint64_t groupUserId;

/** 禁止发言（false：关、true：开） */
@property(nonatomic, readwrite) BOOL noSpeak;

@end

#pragma mark - DLMLimitFriendGroupReq

typedef GPB_ENUM(DLMLimitFriendGroupReq_FieldNumber) {
  DLMLimitFriendGroupReq_FieldNumber_GroupId = 1,
  DLMLimitFriendGroupReq_FieldNumber_LimitFriend = 2,
};

/**
 * 限制加群好友（EventType.LimitFriendGroup）
 **/
GPB_FINAL @interface DLMLimitFriendGroupReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 限制加群好友（false：关、true：开） */
@property(nonatomic, readwrite) BOOL limitFriend;

@end

#pragma mark - DLMGroupRedPacketRightsReq

typedef GPB_ENUM(DLMGroupRedPacketRightsReq_FieldNumber) {
  DLMGroupRedPacketRightsReq_FieldNumber_GroupId = 1,
  DLMGroupRedPacketRightsReq_FieldNumber_RedPacketRights = 2,
};

/**
 * 红包权限（0：关：1：开）（EventType.GroupRedPacketRights）
 **/
GPB_FINAL @interface DLMGroupRedPacketRightsReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 红包权限（false：关、true：开） */
@property(nonatomic, readwrite) BOOL redPacketRights;

@end

#pragma mark - DLMTransferGroupLeaderReq

typedef GPB_ENUM(DLMTransferGroupLeaderReq_FieldNumber) {
  DLMTransferGroupLeaderReq_FieldNumber_GroupId = 1,
  DLMTransferGroupLeaderReq_FieldNumber_LeaderUserId = 2,
};

/**
 * 转让群主，群转让（EventType.TransferGroupLeader）
 **/
GPB_FINAL @interface DLMTransferGroupLeaderReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群主用户Id */
@property(nonatomic, readwrite) uint64_t leaderUserId;

@end

#pragma mark - DLMGroupInfoReq

typedef GPB_ENUM(DLMGroupInfoReq_FieldNumber) {
  DLMGroupInfoReq_FieldNumber_GroupId = 1,
  DLMGroupInfoReq_FieldNumber_GroupType = 2,
  DLMGroupInfoReq_FieldNumber_LastPullTime = 3,
};

/**
 * 群信息（EventType.GroupInfo）
 **/
GPB_FINAL @interface DLMGroupInfoReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群类型（0：查询、1：邀请） */
@property(nonatomic, readwrite) int32_t groupType;

/** 客户端拉取最后时间 */
@property(nonatomic, readwrite) uint64_t lastPullTime;

@end

#pragma mark - DLMGroupUserInfoReq

typedef GPB_ENUM(DLMGroupUserInfoReq_FieldNumber) {
  DLMGroupUserInfoReq_FieldNumber_GroupId = 1,
  DLMGroupUserInfoReq_FieldNumber_UserId = 2,
  DLMGroupUserInfoReq_FieldNumber_LastPullTime = 3,
};

/**
 * 群成员信息（EventType.GroupUserInfo）
 **/
GPB_FINAL @interface DLMGroupUserInfoReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群成员用户Id */
@property(nonatomic, readwrite) uint64_t userId;

/** 客户端拉取最后时间 */
@property(nonatomic, readwrite) uint64_t lastPullTime;

@end

#pragma mark - DLMGroupListReq

typedef GPB_ENUM(DLMGroupListReq_FieldNumber) {
  DLMGroupListReq_FieldNumber_LastPullTime = 1,
};

/**
 * 群组列表（EventType.GroupList）
 **/
GPB_FINAL @interface DLMGroupListReq : GPBMessage

/** 客户端拉取最后时间 */
@property(nonatomic, readwrite) uint64_t lastPullTime;

@end

#pragma mark - DLMGroupListRsp

typedef GPB_ENUM(DLMGroupListRsp_FieldNumber) {
  DLMGroupListRsp_FieldNumber_GroupsArray = 1,
};

/**
 * 群组列表
 **/
GPB_FINAL @interface DLMGroupListRsp : GPBMessage

/** 群组列表信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMGroupInfoRsp*> *groupsArray;
/** The number of items in @c groupsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupsArray_Count;

@end

#pragma mark - DLMGroupUserListReq

typedef GPB_ENUM(DLMGroupUserListReq_FieldNumber) {
  DLMGroupUserListReq_FieldNumber_GroupId = 1,
  DLMGroupUserListReq_FieldNumber_LastPullTime = 2,
};

/**
 * 群成员列表信息（EventType.GroupUserList）
 **/
GPB_FINAL @interface DLMGroupUserListReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 客户端拉取最后时间 */
@property(nonatomic, readwrite) uint64_t lastPullTime;

@end

#pragma mark - DLMGroupUserAuditReq

typedef GPB_ENUM(DLMGroupUserAuditReq_FieldNumber) {
  DLMGroupUserAuditReq_FieldNumber_GroupId = 1,
  DLMGroupUserAuditReq_FieldNumber_UserId = 2,
  DLMGroupUserAuditReq_FieldNumber_AuditStatus = 3,
};

/**
 * 群成员审核（EventType.GroupUserAudit）
 **/
GPB_FINAL @interface DLMGroupUserAuditReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群成员用户Id */
@property(nonatomic, readwrite) uint64_t userId;

/** 审核状态（1：拒绝、2：同意） */
@property(nonatomic, readwrite) int32_t auditStatus;

@end

#pragma mark - DLMGroupUserAuditRemindReq

typedef GPB_ENUM(DLMGroupUserAuditRemindReq_FieldNumber) {
  DLMGroupUserAuditRemindReq_FieldNumber_GroupId = 1,
};

/**
 * 群成员审核提醒（EventType.GroupUserAuditRemind）
 **/
GPB_FINAL @interface DLMGroupUserAuditRemindReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

@end

#pragma mark - DLMGroupUserAuditRemindRsp

typedef GPB_ENUM(DLMGroupUserAuditRemindRsp_FieldNumber) {
  DLMGroupUserAuditRemindRsp_FieldNumber_GroupId = 1,
  DLMGroupUserAuditRemindRsp_FieldNumber_RemindCount = 2,
};

/**
 * 群成员审核提醒响应信息
 **/
GPB_FINAL @interface DLMGroupUserAuditRemindRsp : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 提醒数 */
@property(nonatomic, readwrite) int32_t remindCount;

@end

#pragma mark - DLMClearGroupUserAuditReq

typedef GPB_ENUM(DLMClearGroupUserAuditReq_FieldNumber) {
  DLMClearGroupUserAuditReq_FieldNumber_GroupId = 1,
};

/**
 * 清空群成员审核列表（EventType.ClearGroupUserAudit）
 **/
GPB_FINAL @interface DLMClearGroupUserAuditReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

@end

#pragma mark - DLMGroupUserAuditInfoRsp

typedef GPB_ENUM(DLMGroupUserAuditInfoRsp_FieldNumber) {
  DLMGroupUserAuditInfoRsp_FieldNumber_GroupUserId = 1,
  DLMGroupUserAuditInfoRsp_FieldNumber_UserId = 2,
  DLMGroupUserAuditInfoRsp_FieldNumber_NickName = 3,
  DLMGroupUserAuditInfoRsp_FieldNumber_HeadImg = 4,
  DLMGroupUserAuditInfoRsp_FieldNumber_Remark = 5,
  DLMGroupUserAuditInfoRsp_FieldNumber_AuditStatus = 6,
  DLMGroupUserAuditInfoRsp_FieldNumber_ApplyTime = 7,
};

/**
 * 群成员审核信息
 **/
GPB_FINAL @interface DLMGroupUserAuditInfoRsp : GPBMessage

/** 群成员主键Id */
@property(nonatomic, readwrite) uint64_t groupUserId;

/** 群成员用户Id */
@property(nonatomic, readwrite) uint64_t userId;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *headImg;

/** 申请备注 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

/** 审核状态（0：待审核、1：拒绝、2：同意） */
@property(nonatomic, readwrite) int32_t auditStatus;

/** 申请时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *applyTime;

@end

#pragma mark - DLMGroupUserAuditListReq

typedef GPB_ENUM(DLMGroupUserAuditListReq_FieldNumber) {
  DLMGroupUserAuditListReq_FieldNumber_GroupId = 1,
  DLMGroupUserAuditListReq_FieldNumber_LastGroupUserId = 2,
};

/**
 * 群成员审核列表（EventType.GroupUserAuditList）
 **/
GPB_FINAL @interface DLMGroupUserAuditListReq : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 最后一条群成员主键Id */
@property(nonatomic, readwrite) uint64_t lastGroupUserId;

@end

#pragma mark - DLMGroupUserAuditListRsp

typedef GPB_ENUM(DLMGroupUserAuditListRsp_FieldNumber) {
  DLMGroupUserAuditListRsp_FieldNumber_GroupUsersArray = 1,
};

/**
 * 群成员审核列表响应信息
 **/
GPB_FINAL @interface DLMGroupUserAuditListRsp : GPBMessage

/** 群成员审核列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMGroupUserAuditInfoRsp*> *groupUsersArray;
/** The number of items in @c groupUsersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupUsersArray_Count;

@end

#pragma mark - DLMGroupCategoryListReq

/**
 * 群分类列表（EventType.GroupCategoryList）
 **/
GPB_FINAL @interface DLMGroupCategoryListReq : GPBMessage

@end

#pragma mark - DLMGroupInfoRsp

typedef GPB_ENUM(DLMGroupInfoRsp_FieldNumber) {
  DLMGroupInfoRsp_FieldNumber_GroupId = 1,
  DLMGroupInfoRsp_FieldNumber_AccountId = 2,
  DLMGroupInfoRsp_FieldNumber_LeaderUserId = 3,
  DLMGroupInfoRsp_FieldNumber_GroupHeadImg = 4,
  DLMGroupInfoRsp_FieldNumber_GroupName = 5,
  DLMGroupInfoRsp_FieldNumber_GroupQrCode = 6,
  DLMGroupInfoRsp_FieldNumber_GroupUserNum = 7,
  DLMGroupInfoRsp_FieldNumber_GroupNotice = 8,
  DLMGroupInfoRsp_FieldNumber_GroupIntroduction = 9,
  DLMGroupInfoRsp_FieldNumber_LimitFriend = 10,
  DLMGroupInfoRsp_FieldNumber_InviteApproval = 11,
  DLMGroupInfoRsp_FieldNumber_NoSpeak = 12,
  DLMGroupInfoRsp_FieldNumber_CategoryId = 13,
  DLMGroupInfoRsp_FieldNumber_Status = 14,
  DLMGroupInfoRsp_FieldNumber_UnsealStatus = 15,
  DLMGroupInfoRsp_FieldNumber_GroupUser = 16,
  DLMGroupInfoRsp_FieldNumber_SendTime = 17,
  DLMGroupInfoRsp_FieldNumber_SyncUser = 18,
  DLMGroupInfoRsp_FieldNumber_OpenGroup = 19,
  DLMGroupInfoRsp_FieldNumber_RedPacketRights = 20,
};

/**
 * 响应群组详情信息
 **/
GPB_FINAL @interface DLMGroupInfoRsp : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群账号Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;

/** 群主用户Id */
@property(nonatomic, readwrite) uint64_t leaderUserId;

/** 群头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupHeadImg;

/** 群聊组名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupName;

/** 群聊二维码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupQrCode;

/** 群成员数 */
@property(nonatomic, readwrite) int32_t groupUserNum;

/** 群公告 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupNotice;

/** 群介绍 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupIntroduction;

/** 限制加好友（0：关：1：开） */
@property(nonatomic, readwrite) int32_t limitFriend;

/** 邀请确认（0：关：1：开） */
@property(nonatomic, readwrite) int32_t inviteApproval;

/** 禁止发言（0：关：1：开） */
@property(nonatomic, readwrite) int32_t noSpeak;

/** 群分类Id */
@property(nonatomic, readwrite) int32_t categoryId;

/** 状态（0：未解散：1：已解散） */
@property(nonatomic, readwrite) int32_t status;

/** 解封状态（0：禁用、1：启用） */
@property(nonatomic, readwrite) int32_t unsealStatus;

/** 是否该群成员用户 */
@property(nonatomic, readwrite) BOOL groupUser;

/** 更新时间（即发送时间） */
@property(nonatomic, readwrite) uint64_t sendTime;

/** 是否同步群成员 */
@property(nonatomic, readwrite) BOOL syncUser;

/** 是否开放群（0：关：1：开） */
@property(nonatomic, readwrite) int32_t openGroup;

/** 红包权限（0：关：1：开） */
@property(nonatomic, readwrite) int32_t redPacketRights;

@end

#pragma mark - DLMGroupUserListRsp

typedef GPB_ENUM(DLMGroupUserListRsp_FieldNumber) {
  DLMGroupUserListRsp_FieldNumber_GroupUsersArray = 1,
};

/**
 * 响应群成员列表信息
 **/
GPB_FINAL @interface DLMGroupUserListRsp : GPBMessage

/** 群成员列表信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMGroupUserInfoRsp*> *groupUsersArray;
/** The number of items in @c groupUsersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupUsersArray_Count;

@end

#pragma mark - DLMGroupUserInfoRsp

typedef GPB_ENUM(DLMGroupUserInfoRsp_FieldNumber) {
  DLMGroupUserInfoRsp_FieldNumber_GroupId = 1,
  DLMGroupUserInfoRsp_FieldNumber_UserId = 2,
  DLMGroupUserInfoRsp_FieldNumber_NickName = 3,
  DLMGroupUserInfoRsp_FieldNumber_HeadImg = 4,
  DLMGroupUserInfoRsp_FieldNumber_Remark = 5,
  DLMGroupUserInfoRsp_FieldNumber_MuteNotice = 6,
  DLMGroupUserInfoRsp_FieldNumber_StickyOnTop = 7,
  DLMGroupUserInfoRsp_FieldNumber_ToContacts = 8,
  DLMGroupUserInfoRsp_FieldNumber_OnScreenName = 9,
  DLMGroupUserInfoRsp_FieldNumber_Background = 10,
  DLMGroupUserInfoRsp_FieldNumber_NoSpeak = 11,
  DLMGroupUserInfoRsp_FieldNumber_SendTime = 12,
  DLMGroupUserInfoRsp_FieldNumber_Status = 13,
  DLMGroupUserInfoRsp_FieldNumber_Initials = 14,
};

/**
 * 响应群成员信息
 **/
GPB_FINAL @interface DLMGroupUserInfoRsp : GPBMessage

/** 群聊Id */
@property(nonatomic, readwrite) uint64_t groupId;

/** 群成员用户Id */
@property(nonatomic, readwrite) uint64_t userId;

/** 本群昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *headImg;

/** 群聊备注 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

/** 消息免打扰（0：关、1：开） */
@property(nonatomic, readwrite) int32_t muteNotice;

/** 聊天置顶（0：关、1：开） */
@property(nonatomic, readwrite) int32_t stickyOnTop;

/** 保存到通讯录（0：关、1：开） */
@property(nonatomic, readwrite) int32_t toContacts;

/** 显示群成员昵称（0：关、1：开） */
@property(nonatomic, readwrite) int32_t onScreenName;

/** 聊天背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *background;

/** 禁止发言（0：关：1：开） */
@property(nonatomic, readwrite) int32_t noSpeak;

/** 发送时间 */
@property(nonatomic, readwrite) uint64_t sendTime;

/** 状态（0：未退群：1：已退群） */
@property(nonatomic, readwrite) int32_t status;

/** 好友昵称首字母 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *initials;

@end

#pragma mark - DLMGroupCategoryListRsp

typedef GPB_ENUM(DLMGroupCategoryListRsp_FieldNumber) {
  DLMGroupCategoryListRsp_FieldNumber_CategorysArray = 1,
};

/**
 * 响应群分类列表
 **/
GPB_FINAL @interface DLMGroupCategoryListRsp : GPBMessage

/** 群分类列表信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMGroupCategoryInfoRsp*> *categorysArray;
/** The number of items in @c categorysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger categorysArray_Count;

@end

#pragma mark - DLMGroupCategoryInfoRsp

typedef GPB_ENUM(DLMGroupCategoryInfoRsp_FieldNumber) {
  DLMGroupCategoryInfoRsp_FieldNumber_CategoryId = 1,
  DLMGroupCategoryInfoRsp_FieldNumber_CategoryName = 2,
};

/**
 * 响应群分类信息
 **/
GPB_FINAL @interface DLMGroupCategoryInfoRsp : GPBMessage

/** 群分类Id */
@property(nonatomic, readwrite) int32_t categoryId;

/** 群分类名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *categoryName;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
