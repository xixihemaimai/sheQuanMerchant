// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufFriend.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DLMFriendApplyInfoRsp;
@class DLMUserFriendInfoRsp;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - DLMProtobufFriendRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface DLMProtobufFriendRoot : GPBRootObject
@end

#pragma mark - DLMAddFriendApplyReq

typedef GPB_ENUM(DLMAddFriendApplyReq_FieldNumber) {
  DLMAddFriendApplyReq_FieldNumber_FriendUserId = 1,
  DLMAddFriendApplyReq_FieldNumber_Remarks = 2,
  DLMAddFriendApplyReq_FieldNumber_ReqType = 3,
};

/**
 * 添加好友申请（EventType.AddFriendApply）
 **/
GPB_FINAL @interface DLMAddFriendApplyReq : GPBMessage

/** 好友用户Id */
@property(nonatomic, readwrite) uint64_t friendUserId;

/** 备注 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remarks;

/** 请求来源（0：搜索【默认】、1：二维码） */
@property(nonatomic, readwrite) int32_t reqType;

@end

#pragma mark - DLMApproveFriendReq

typedef GPB_ENUM(DLMApproveFriendReq_FieldNumber) {
  DLMApproveFriendReq_FieldNumber_FriendApplyId = 1,
};

/**
 * 同意好友申请（EventType.ApproveFriend）
 **/
GPB_FINAL @interface DLMApproveFriendReq : GPBMessage

/** 好友申请记录Id */
@property(nonatomic, readwrite) uint64_t friendApplyId;

@end

#pragma mark - DLMBlockFriendReq

typedef GPB_ENUM(DLMBlockFriendReq_FieldNumber) {
  DLMBlockFriendReq_FieldNumber_FriendUserId = 1,
  DLMBlockFriendReq_FieldNumber_Black = 2,
};

/**
 * 拉黑好友（EventType.BlockFriend）
 **/
GPB_FINAL @interface DLMBlockFriendReq : GPBMessage

/** 好友用户Id */
@property(nonatomic, readwrite) uint64_t friendUserId;

/** 加入黑名单（0：关、1：开） */
@property(nonatomic, readwrite) int32_t black;

@end

#pragma mark - DLMChatBackgroundReq

typedef GPB_ENUM(DLMChatBackgroundReq_FieldNumber) {
  DLMChatBackgroundReq_FieldNumber_TargetId = 1,
  DLMChatBackgroundReq_FieldNumber_MsgType = 2,
  DLMChatBackgroundReq_FieldNumber_Background = 3,
};

/**
 * 聊天背景图（EventType.ChatBackground）
 **/
GPB_FINAL @interface DLMChatBackgroundReq : GPBMessage

/** 消息接收方(userId、groupId) */
@property(nonatomic, readwrite) uint64_t targetId;

/** 消息类型(1：Single、2：Group) */
@property(nonatomic, readwrite) int32_t msgType;

/** 聊天背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *background;

@end

#pragma mark - DLMContactListReq

typedef GPB_ENUM(DLMContactListReq_FieldNumber) {
  DLMContactListReq_FieldNumber_LastPullTime = 1,
};

/**
 * 通讯录列表（EventType.ContactList）
 **/
GPB_FINAL @interface DLMContactListReq : GPBMessage

/** 最后一次拉取时间(时间戳) */
@property(nonatomic, readwrite) uint64_t lastPullTime;

@end

#pragma mark - DLMDelFriendApplyReq

typedef GPB_ENUM(DLMDelFriendApplyReq_FieldNumber) {
  DLMDelFriendApplyReq_FieldNumber_FriendApplyId = 1,
};

/**
 * 删除好友申请（EventType.DelFriendApply）
 **/
GPB_FINAL @interface DLMDelFriendApplyReq : GPBMessage

/** 好友申请记录Id */
@property(nonatomic, readwrite) uint64_t friendApplyId;

@end

#pragma mark - DLMDelFriendReq

typedef GPB_ENUM(DLMDelFriendReq_FieldNumber) {
  DLMDelFriendReq_FieldNumber_FriendUserId = 1,
};

/**
 * 删除好友（EventType.DelFriend）
 **/
GPB_FINAL @interface DLMDelFriendReq : GPBMessage

/** 好友UserId */
@property(nonatomic, readwrite) uint64_t friendUserId;

@end

#pragma mark - DLMRejectFriendApplyReq

typedef GPB_ENUM(DLMRejectFriendApplyReq_FieldNumber) {
  DLMRejectFriendApplyReq_FieldNumber_FriendApplyId = 1,
};

/**
 * 拒绝好友申请（EventType.RejectFriendApply）
 **/
GPB_FINAL @interface DLMRejectFriendApplyReq : GPBMessage

/** 好友申请记录Id */
@property(nonatomic, readwrite) uint64_t friendApplyId;

@end

#pragma mark - DLMClearFriendApplyReq

/**
 * 清空好友请求列表（EventType.ClearFriendApply）
 **/
GPB_FINAL @interface DLMClearFriendApplyReq : GPBMessage

@end

#pragma mark - DLMUserFriendBlockReq

typedef GPB_ENUM(DLMUserFriendBlockReq_FieldNumber) {
  DLMUserFriendBlockReq_FieldNumber_LastPullTime = 1,
};

/**
 * 获取黑名单的列表（EventType.FriendBlockList）
 **/
GPB_FINAL @interface DLMUserFriendBlockReq : GPBMessage

/** 最后一次拉取时间(时间戳) */
@property(nonatomic, readwrite) uint64_t lastPullTime;

@end

#pragma mark - DLMFriendApplyInfoReq

typedef GPB_ENUM(DLMFriendApplyInfoReq_FieldNumber) {
  DLMFriendApplyInfoReq_FieldNumber_FriendApplyId = 1,
};

/**
 * 请求好友申请详细（EventType.FriendApplyInfo）
 **/
GPB_FINAL @interface DLMFriendApplyInfoReq : GPBMessage

/** 好友申请记录Id */
@property(nonatomic, readwrite) uint64_t friendApplyId;

@end

#pragma mark - DLMFriendApplyReq

typedef GPB_ENUM(DLMFriendApplyReq_FieldNumber) {
  DLMFriendApplyReq_FieldNumber_LastApplyTime = 1,
};

/**
 * 请求好友申请列表（EventType.FriendApply）
 **/
GPB_FINAL @interface DLMFriendApplyReq : GPBMessage

/** 最后一次申请时间 */
@property(nonatomic, readwrite) uint64_t lastApplyTime;

@end

#pragma mark - DLMFriendApplyListRsp

typedef GPB_ENUM(DLMFriendApplyListRsp_FieldNumber) {
  DLMFriendApplyListRsp_FieldNumber_FriendApplysArray = 1,
};

/**
 * 应答好友申请列表
 **/
GPB_FINAL @interface DLMFriendApplyListRsp : GPBMessage

/** 好友申请列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMFriendApplyInfoRsp*> *friendApplysArray;
/** The number of items in @c friendApplysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger friendApplysArray_Count;

@end

#pragma mark - DLMFriendApplyInfoRsp

typedef GPB_ENUM(DLMFriendApplyInfoRsp_FieldNumber) {
  DLMFriendApplyInfoRsp_FieldNumber_Id_p = 1,
  DLMFriendApplyInfoRsp_FieldNumber_ApplyUserId = 2,
  DLMFriendApplyInfoRsp_FieldNumber_ApplyOpenId = 3,
  DLMFriendApplyInfoRsp_FieldNumber_HeadImg = 4,
  DLMFriendApplyInfoRsp_FieldNumber_NickName = 5,
  DLMFriendApplyInfoRsp_FieldNumber_ApplyStatus = 6,
  DLMFriendApplyInfoRsp_FieldNumber_Remarks = 7,
  DLMFriendApplyInfoRsp_FieldNumber_ApplyTime = 8,
};

/**
 * 获取好友申请详细信息
 **/
GPB_FINAL @interface DLMFriendApplyInfoRsp : GPBMessage

/** 申请记录Id */
@property(nonatomic, readwrite) uint64_t id_p;

/** 申请人UserId */
@property(nonatomic, readwrite) uint64_t applyUserId;

/** 申请人OpendId */
@property(nonatomic, readwrite, copy, null_resettable) NSString *applyOpenId;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *headImg;

/** 好友昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

/** 申请状态（1：等待验证、2：已过期、3：已拒绝、4：已添加） */
@property(nonatomic, readwrite) int32_t applyStatus;

/** 备注 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remarks;

/** 申请时间 */
@property(nonatomic, readwrite) uint64_t applyTime;

@end

#pragma mark - DLMFriendApplyNumReq

/**
 * 获取好友申请详细请求（EventType.FriendApplyNum）
 **/
GPB_FINAL @interface DLMFriendApplyNumReq : GPBMessage

@end

#pragma mark - DLMFriendApplyNumRsp

typedef GPB_ENUM(DLMFriendApplyNumRsp_FieldNumber) {
  DLMFriendApplyNumRsp_FieldNumber_FriendApplyNum = 1,
};

/**
 * 好友申请数
 **/
GPB_FINAL @interface DLMFriendApplyNumRsp : GPBMessage

/** 好友申请数 */
@property(nonatomic, readwrite) int32_t friendApplyNum;

@end

#pragma mark - DLMFriendRemarkReq

typedef GPB_ENUM(DLMFriendRemarkReq_FieldNumber) {
  DLMFriendRemarkReq_FieldNumber_FriendUserId = 1,
  DLMFriendRemarkReq_FieldNumber_Remark = 2,
};

/**
 * 好友备注（EventType.FriendRemark）
 **/
GPB_FINAL @interface DLMFriendRemarkReq : GPBMessage

/** 好友User Id */
@property(nonatomic, readwrite) uint64_t friendUserId;

/** 好友备注 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

@end

#pragma mark - DLMMsgAlertReq

typedef GPB_ENUM(DLMMsgAlertReq_FieldNumber) {
  DLMMsgAlertReq_FieldNumber_FriendUserId = 1,
  DLMMsgAlertReq_FieldNumber_Alert = 2,
};

/**
 * 提醒（0：关、1：开）（EventType.MsgAlert）
 **/
GPB_FINAL @interface DLMMsgAlertReq : GPBMessage

/** 好友User Id */
@property(nonatomic, readwrite) uint64_t friendUserId;

/** 提醒（0：关、1：开） */
@property(nonatomic, readwrite) int32_t alert;

@end

#pragma mark - DLMMuteNoticeReq

typedef GPB_ENUM(DLMMuteNoticeReq_FieldNumber) {
  DLMMuteNoticeReq_FieldNumber_TargetId = 1,
  DLMMuteNoticeReq_FieldNumber_MsgType = 2,
  DLMMuteNoticeReq_FieldNumber_MuteNotice = 3,
};

/**
 * 消息免打扰（0：关、1：开）（EventType.MuteNotice）
 **/
GPB_FINAL @interface DLMMuteNoticeReq : GPBMessage

/** 消息接收方(userId、groupId) */
@property(nonatomic, readwrite) uint64_t targetId;

/** 消息类型(1：Single、2：Group) */
@property(nonatomic, readwrite) int32_t msgType;

/** 静音消息免打扰（0：关、1：开） */
@property(nonatomic, readwrite) int32_t muteNotice;

@end

#pragma mark - DLMStarFriendReq

typedef GPB_ENUM(DLMStarFriendReq_FieldNumber) {
  DLMStarFriendReq_FieldNumber_FriendUserId = 1,
  DLMStarFriendReq_FieldNumber_Star = 2,
};

/**
 * 星标好友（EventType.StarFriend）
 **/
GPB_FINAL @interface DLMStarFriendReq : GPBMessage

/** 好友UserId */
@property(nonatomic, readwrite) uint64_t friendUserId;

/** 设为星标好友（0：关、1：开） */
@property(nonatomic, readwrite) int32_t star;

@end

#pragma mark - DLMUserFriendAuthReq

typedef GPB_ENUM(DLMUserFriendAuthReq_FieldNumber) {
  DLMUserFriendAuthReq_FieldNumber_FriendUserId = 1,
};

/**
 * 用户好友鉴权（EventType.UserFriendAuth）
 **/
GPB_FINAL @interface DLMUserFriendAuthReq : GPBMessage

/** 好友UserId */
@property(nonatomic, readwrite) uint64_t friendUserId;

@end

#pragma mark - DLMStickyOnTopReq

typedef GPB_ENUM(DLMStickyOnTopReq_FieldNumber) {
  DLMStickyOnTopReq_FieldNumber_TargetId = 1,
  DLMStickyOnTopReq_FieldNumber_MsgType = 2,
  DLMStickyOnTopReq_FieldNumber_Top = 3,
};

/**
 * 聊天置顶（0：关、1：开）（EventType.StickyOnTop）
 **/
GPB_FINAL @interface DLMStickyOnTopReq : GPBMessage

/** 消息接收方(userId、groupId) */
@property(nonatomic, readwrite) uint64_t targetId;

/** 消息类型(1：Single、2：Group) */
@property(nonatomic, readwrite) int32_t msgType;

/** 聊天置顶（0：关、1：开） */
@property(nonatomic, readwrite) int32_t top;

@end

#pragma mark - DLMUserFriendListReq

typedef GPB_ENUM(DLMUserFriendListReq_FieldNumber) {
  DLMUserFriendListReq_FieldNumber_LastPullTime = 1,
};

/**
 * 用户好友列表（EventType.UserFriendInfoList）
 **/
GPB_FINAL @interface DLMUserFriendListReq : GPBMessage

/** 最后一次更新时间(时间戳) */
@property(nonatomic, readwrite) uint64_t lastPullTime;

@end

#pragma mark - DLMSearchFriendReq

typedef GPB_ENUM(DLMSearchFriendReq_FieldNumber) {
  DLMSearchFriendReq_FieldNumber_AccountNo = 1,
};

/**
 * 搜索好友（EventType.SearchFriends）
 **/
GPB_FINAL @interface DLMSearchFriendReq : GPBMessage

/** 好友账号(账号、手机号) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountNo;

@end

#pragma mark - DLMUserFriendListRsp

typedef GPB_ENUM(DLMUserFriendListRsp_FieldNumber) {
  DLMUserFriendListRsp_FieldNumber_FriendsArray = 1,
};

/**
 * 好友列表
 **/
GPB_FINAL @interface DLMUserFriendListRsp : GPBMessage

/** 用户好友信息列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMUserFriendInfoRsp*> *friendsArray;
/** The number of items in @c friendsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger friendsArray_Count;

@end

#pragma mark - DLMUserFriendInfoReq

typedef GPB_ENUM(DLMUserFriendInfoReq_FieldNumber) {
  DLMUserFriendInfoReq_FieldNumber_FriendUserId = 1,
};

/**
 * 用户好友请求（EventType.UserFriendInfo）
 **/
GPB_FINAL @interface DLMUserFriendInfoReq : GPBMessage

/** 好友User Id */
@property(nonatomic, readwrite) uint64_t friendUserId;

@end

#pragma mark - DLMUserFriendInfoRsp

typedef GPB_ENUM(DLMUserFriendInfoRsp_FieldNumber) {
  DLMUserFriendInfoRsp_FieldNumber_UserId = 1,
  DLMUserFriendInfoRsp_FieldNumber_OpenId = 2,
  DLMUserFriendInfoRsp_FieldNumber_NickName = 3,
  DLMUserFriendInfoRsp_FieldNumber_Remark = 4,
  DLMUserFriendInfoRsp_FieldNumber_Email = 5,
  DLMUserFriendInfoRsp_FieldNumber_RegionName = 6,
  DLMUserFriendInfoRsp_FieldNumber_Sign = 7,
  DLMUserFriendInfoRsp_FieldNumber_Sex = 8,
  DLMUserFriendInfoRsp_FieldNumber_SexValue = 9,
  DLMUserFriendInfoRsp_FieldNumber_HeadImg = 10,
  DLMUserFriendInfoRsp_FieldNumber_QrCode = 11,
  DLMUserFriendInfoRsp_FieldNumber_Friend_p = 12,
  DLMUserFriendInfoRsp_FieldNumber_Black = 13,
  DLMUserFriendInfoRsp_FieldNumber_Top = 14,
  DLMUserFriendInfoRsp_FieldNumber_MuteNotice = 15,
  DLMUserFriendInfoRsp_FieldNumber_Background = 16,
  DLMUserFriendInfoRsp_FieldNumber_Initials = 17,
  DLMUserFriendInfoRsp_FieldNumber_Alert = 18,
  DLMUserFriendInfoRsp_FieldNumber_Star = 19,
  DLMUserFriendInfoRsp_FieldNumber_Status = 20,
  DLMUserFriendInfoRsp_FieldNumber_SendTime = 21,
  DLMUserFriendInfoRsp_FieldNumber_MyQrCode = 22,
  DLMUserFriendInfoRsp_FieldNumber_ContactCard = 23,
};

/**
 * 应答用户好友信息
 **/
GPB_FINAL @interface DLMUserFriendInfoRsp : GPBMessage

/** 好友User Id */
@property(nonatomic, readwrite) uint64_t userId;

/** 好友openId */
@property(nonatomic, readwrite, copy, null_resettable) NSString *openId;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

/** 好友备注 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

/** 电子邮件 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *email;

/** 地区名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *regionName;

/** 个性签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;

/** 性别（0：保密、1：男、2：女） */
@property(nonatomic, readwrite) int32_t sex;

/** 性别（保密、男、女） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sexValue;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *headImg;

/** 二维码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qrCode;

/** 是否已是好友 */
@property(nonatomic, readwrite) BOOL friend_p;

/** 加入黑名单（0：关、1：开） */
@property(nonatomic, readwrite) int32_t black;

/** 聊天置顶（0：关、1：开） */
@property(nonatomic, readwrite) int32_t top;

/** 静音消息免打扰（0：关、1：开） */
@property(nonatomic, readwrite) int32_t muteNotice;

/** 聊天背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *background;

/** 好友昵称首字母 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *initials;

/** 提醒（0：关、1：开） */
@property(nonatomic, readwrite) int32_t alert;

/** 设为星标好友（0：关、1：开） */
@property(nonatomic, readwrite) int32_t star;

/** 状态（0：未删除、1：已删除） */
@property(nonatomic, readwrite) int32_t status;

/** 发送时间 */
@property(nonatomic, readwrite) uint64_t sendTime;

/** 允许我的二维码添加好友（false：禁用、true：启用） */
@property(nonatomic, readwrite) BOOL myQrCode;

/** 允许个人名片添加好友（false：禁用、true：启用） */
@property(nonatomic, readwrite) BOOL contactCard;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
