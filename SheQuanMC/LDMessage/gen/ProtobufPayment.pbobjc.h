// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufPayment.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DLMBankCardInfoRsp;
@class DLMExpenseDetailsRsp;
@class DLMIncomeDetailsRsp;
@class DLMRefundDetailsRsp;
@class DLMRefundFlowRsp;
@class DLMTopUpDetailsRsp;
@class DLMTradeFlowStatusRsp;
@class DLMTradeGroupInfoRsp;
@class DLMTradeInfoRsp;
@class DLMTradeTypeInfoRsp;
@class DLMUserPaymentInfoRsp;
@class DLMWithdrawDetailsRsp;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - DLMProtobufPaymentRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface DLMProtobufPaymentRoot : GPBRootObject
@end

#pragma mark - DLMUserPaymentListReq

/**
 * 支付方式列表（EventType.UserPaymentList）
 **/
GPB_FINAL @interface DLMUserPaymentListReq : GPBMessage

@end

#pragma mark - DLMUserPaymentListRsp

typedef GPB_ENUM(DLMUserPaymentListRsp_FieldNumber) {
  DLMUserPaymentListRsp_FieldNumber_PaymentsArray = 1,
};

/**
 * 响应支付方式列表信息
 **/
GPB_FINAL @interface DLMUserPaymentListRsp : GPBMessage

/** 支付方式列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMUserPaymentInfoRsp*> *paymentsArray;
/** The number of items in @c paymentsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger paymentsArray_Count;

@end

#pragma mark - DLMUserPaymentInfoRsp

typedef GPB_ENUM(DLMUserPaymentInfoRsp_FieldNumber) {
  DLMUserPaymentInfoRsp_FieldNumber_PayId = 1,
  DLMUserPaymentInfoRsp_FieldNumber_PayType = 2,
  DLMUserPaymentInfoRsp_FieldNumber_PayName = 3,
  DLMUserPaymentInfoRsp_FieldNumber_PayIcon = 4,
};

/**
 * 响应支付方式列表
 **/
GPB_FINAL @interface DLMUserPaymentInfoRsp : GPBMessage

/** 支付Id */
@property(nonatomic, readwrite) uint64_t payId;

/**
 * *
 * payType INTEGER(10) 必填<br>
 * 支付类型：
 * 1、零钱
 * 2、云零钱支付
 * 3、支付宝
 * 4、微信
 * 5、储蓄卡
 * 6、信用卡
 **/
@property(nonatomic, readwrite) int32_t payType;

/** 支付名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *payName;

/** 支付图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *payIcon;

@end

#pragma mark - DLMBankCardListReq

/**
 * 银行卡列表（EventType.BankCardList）
 **/
GPB_FINAL @interface DLMBankCardListReq : GPBMessage

@end

#pragma mark - DLMBankCardListRsp

typedef GPB_ENUM(DLMBankCardListRsp_FieldNumber) {
  DLMBankCardListRsp_FieldNumber_BankCardsArray = 1,
};

/**
 * 响应银行卡列表
 **/
GPB_FINAL @interface DLMBankCardListRsp : GPBMessage

/** 银行卡列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMBankCardInfoRsp*> *bankCardsArray;
/** The number of items in @c bankCardsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bankCardsArray_Count;

@end

#pragma mark - DLMBankCardInfoReq

typedef GPB_ENUM(DLMBankCardInfoReq_FieldNumber) {
  DLMBankCardInfoReq_FieldNumber_CardId = 1,
};

/**
 * 银行卡信息（EventType.BankCardInfo）
 **/
GPB_FINAL @interface DLMBankCardInfoReq : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

@end

#pragma mark - DLMBankCardInfoRsp

typedef GPB_ENUM(DLMBankCardInfoRsp_FieldNumber) {
  DLMBankCardInfoRsp_FieldNumber_CardId = 1,
  DLMBankCardInfoRsp_FieldNumber_CardType = 2,
  DLMBankCardInfoRsp_FieldNumber_BankName = 3,
  DLMBankCardInfoRsp_FieldNumber_BankNo = 4,
  DLMBankCardInfoRsp_FieldNumber_BankType = 5,
  DLMBankCardInfoRsp_FieldNumber_BankIcon = 6,
  DLMBankCardInfoRsp_FieldNumber_CardName = 7,
};

/**
 * 银行卡信息
 **/
GPB_FINAL @interface DLMBankCardInfoRsp : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

/** 卡片类型 */
@property(nonatomic, readwrite) int32_t cardType;

/** 银行名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bankName;

/** 银行账号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bankNo;

/** 银行卡类型 */
@property(nonatomic, readwrite) int32_t bankType;

/** 银行卡图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bankIcon;

/** 卡片类型名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cardName;

@end

#pragma mark - DLMFaceVerifyBankCardReq

typedef GPB_ENUM(DLMFaceVerifyBankCardReq_FieldNumber) {
  DLMFaceVerifyBankCardReq_FieldNumber_BankNo = 1,
  DLMFaceVerifyBankCardReq_FieldNumber_Mobile = 2,
  DLMFaceVerifyBankCardReq_FieldNumber_CardAvailableDate = 3,
  DLMFaceVerifyBankCardReq_FieldNumber_Cvv2 = 4,
  DLMFaceVerifyBankCardReq_FieldNumber_MetaInfo = 5,
};

/**
 * 绑定银行卡人脸识别（EventType.FaceVerifyBankCard）
 **/
GPB_FINAL @interface DLMFaceVerifyBankCardReq : GPBMessage

/** 綁定银行卡卡号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bankNo;

/** 银行卡预留手机号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mobile;

/** 贷记卡有效期，例如：0320，含义：2020年03月 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cardAvailableDate;

/** 信用卡CVV2，例如：318 */
@property(nonatomic, readwrite) int32_t cvv2;

/** Metainfo 环境参数，需要通过客户端 SDK 获取（https://help.aliyun.com/document_detail/160546.html） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *metaInfo;

@end

#pragma mark - DLMFaceVerifyBankCardRsp

typedef GPB_ENUM(DLMFaceVerifyBankCardRsp_FieldNumber) {
  DLMFaceVerifyBankCardRsp_FieldNumber_CardId = 1,
  DLMFaceVerifyBankCardRsp_FieldNumber_CertifyId = 2,
};

/**
 * 绑定银行卡人脸识别响应报文
 **/
GPB_FINAL @interface DLMFaceVerifyBankCardRsp : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

/** 实人认证唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *certifyId;

@end

#pragma mark - DLMFaceVerifyBankCardConfirmReq

typedef GPB_ENUM(DLMFaceVerifyBankCardConfirmReq_FieldNumber) {
  DLMFaceVerifyBankCardConfirmReq_FieldNumber_CardId = 1,
  DLMFaceVerifyBankCardConfirmReq_FieldNumber_CertifyId = 2,
};

/**
 * 确认银行卡人脸识别结果（EventType.FaceVerifyBankCardConfirm）
 **/
GPB_FINAL @interface DLMFaceVerifyBankCardConfirmReq : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

/** 实人认证唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *certifyId;

@end

#pragma mark - DLMFaceVerifyBankCardConfirmRsp

typedef GPB_ENUM(DLMFaceVerifyBankCardConfirmRsp_FieldNumber) {
  DLMFaceVerifyBankCardConfirmRsp_FieldNumber_CardId = 1,
  DLMFaceVerifyBankCardConfirmRsp_FieldNumber_AuthOrderId = 2,
};

/**
 * 确认银行卡人脸识别结果响应报文
 **/
GPB_FINAL @interface DLMFaceVerifyBankCardConfirmRsp : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

/** 授权订单Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *authOrderId;

@end

#pragma mark - DLMReSendBindBankCardCaptchaReq

typedef GPB_ENUM(DLMReSendBindBankCardCaptchaReq_FieldNumber) {
  DLMReSendBindBankCardCaptchaReq_FieldNumber_CardId = 1,
  DLMReSendBindBankCardCaptchaReq_FieldNumber_CertifyId = 2,
};

/**
 * 重发绑定银行卡验证码（EventType.ReSendBindBankCardCaptcha）
 **/
GPB_FINAL @interface DLMReSendBindBankCardCaptchaReq : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

/** 实人认证唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *certifyId;

@end

#pragma mark - DLMReSendBindBankCardCaptchaRsp

typedef GPB_ENUM(DLMReSendBindBankCardCaptchaRsp_FieldNumber) {
  DLMReSendBindBankCardCaptchaRsp_FieldNumber_CardId = 1,
  DLMReSendBindBankCardCaptchaRsp_FieldNumber_AuthOrderId = 2,
};

/**
 * 重发绑定银行卡验证码响应报文
 **/
GPB_FINAL @interface DLMReSendBindBankCardCaptchaRsp : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

/** 授权订单Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *authOrderId;

@end

#pragma mark - DLMBindBankCardReq

typedef GPB_ENUM(DLMBindBankCardReq_FieldNumber) {
  DLMBindBankCardReq_FieldNumber_CardId = 1,
  DLMBindBankCardReq_FieldNumber_AuthOrderId = 2,
  DLMBindBankCardReq_FieldNumber_VerifyCode = 3,
};

/**
 * 绑定银行卡（EventType.BindBankCard）
 **/
GPB_FINAL @interface DLMBindBankCardReq : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

/** 授权订单Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *authOrderId;

/** 手机验证码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyCode;

@end

#pragma mark - DLMUnbindBankCardReq

typedef GPB_ENUM(DLMUnbindBankCardReq_FieldNumber) {
  DLMUnbindBankCardReq_FieldNumber_CardId = 1,
};

/**
 * 解绑银行卡（EventType.UnbindBankCard）
 **/
GPB_FINAL @interface DLMUnbindBankCardReq : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

@end

#pragma mark - DLMTopUpReq

typedef GPB_ENUM(DLMTopUpReq_FieldNumber) {
  DLMTopUpReq_FieldNumber_CardId = 1,
  DLMTopUpReq_FieldNumber_Amount = 2,
  DLMTopUpReq_FieldNumber_ValidId = 3,
  DLMTopUpReq_FieldNumber_VerifyCode = 4,
  DLMTopUpReq_FieldNumber_TradeNo = 5,
};

/**
 * 充值（EventType.TopUp）
 **/
GPB_FINAL @interface DLMTopUpReq : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

/** 充值金额，格式：数字（以元为单位） */
@property(nonatomic, readwrite) int32_t amount;

/** 验证码授权Id（当时获取验证码返回的validId） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *validId;

/** 手机验证码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *verifyCode;

/** 交易单号，取TopUpVerifyCodeRsp.tradeNo */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeNo;

@end

#pragma mark - DLMTopUpRsp

typedef GPB_ENUM(DLMTopUpRsp_FieldNumber) {
  DLMTopUpRsp_FieldNumber_TradeNo = 1,
};

/**
 * 充值响应报文
 **/
GPB_FINAL @interface DLMTopUpRsp : GPBMessage

/** 交易单号  -- 2017113023444200103030333333 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeNo;

@end

#pragma mark - DLMTopUpVerifyCodeReq

typedef GPB_ENUM(DLMTopUpVerifyCodeReq_FieldNumber) {
  DLMTopUpVerifyCodeReq_FieldNumber_CardId = 1,
  DLMTopUpVerifyCodeReq_FieldNumber_Amount = 2,
};

/**
 * 充值验证码（EventType.TopUpVerifyCode）
 **/
GPB_FINAL @interface DLMTopUpVerifyCodeReq : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

/** 充值金额 */
@property(nonatomic, readwrite) int32_t amount;

@end

#pragma mark - DLMTopUpVerifyCodeRsp

typedef GPB_ENUM(DLMTopUpVerifyCodeRsp_FieldNumber) {
  DLMTopUpVerifyCodeRsp_FieldNumber_ValidId = 1,
  DLMTopUpVerifyCodeRsp_FieldNumber_TradeNo = 2,
};

/**
 * 充值验证码响应报文
 **/
GPB_FINAL @interface DLMTopUpVerifyCodeRsp : GPBMessage

/** 验证码授权Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *validId;

/** 交易单号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeNo;

@end

#pragma mark - DLMConfirmWithdrawalReq

typedef GPB_ENUM(DLMConfirmWithdrawalReq_FieldNumber) {
  DLMConfirmWithdrawalReq_FieldNumber_CardId = 1,
  DLMConfirmWithdrawalReq_FieldNumber_Amount = 2,
};

/**
 * 确认提现（EventType.ConfirmWithdrawal）
 **/
GPB_FINAL @interface DLMConfirmWithdrawalReq : GPBMessage

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

/** 提现金额 */
@property(nonatomic, readwrite) float amount;

@end

#pragma mark - DLMConfirmWithdrawalRsp

typedef GPB_ENUM(DLMConfirmWithdrawalRsp_FieldNumber) {
  DLMConfirmWithdrawalRsp_FieldNumber_TokenId = 1,
  DLMConfirmWithdrawalRsp_FieldNumber_Amount = 2,
  DLMConfirmWithdrawalRsp_FieldNumber_ServiceFee = 3,
  DLMConfirmWithdrawalRsp_FieldNumber_Rate = 4,
  DLMConfirmWithdrawalRsp_FieldNumber_TimeStamp = 5,
  DLMConfirmWithdrawalRsp_FieldNumber_ActualAmount = 6,
};

/**
 * 确认提现响应报文
 **/
GPB_FINAL @interface DLMConfirmWithdrawalRsp : GPBMessage

/** 令牌Id，这个到时当提现（EventType.Withdraw）接口入参 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tokenId;

/** 提现金额 */
@property(nonatomic, readwrite) float amount;

/** 服务费  -- 0.10 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serviceFee;

/** 费率 -- 0.10% */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rate;

/** 时间戳 */
@property(nonatomic, readwrite) uint64_t timeStamp;

/** 实际到账提现金额=提现金额+服务费 -- 会在弹出框使用 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *actualAmount;

@end

#pragma mark - DLMWithdrawReq

typedef GPB_ENUM(DLMWithdrawReq_FieldNumber) {
  DLMWithdrawReq_FieldNumber_TokenId = 1,
  DLMWithdrawReq_FieldNumber_CardId = 2,
  DLMWithdrawReq_FieldNumber_Amount = 3,
  DLMWithdrawReq_FieldNumber_PayPwd = 4,
  DLMWithdrawReq_FieldNumber_TimeStamp = 5,
  DLMWithdrawReq_FieldNumber_WithdrawType = 6,
};

/**
 * 提现（EventType.Withdraw）
 **/
GPB_FINAL @interface DLMWithdrawReq : GPBMessage

/** 令牌Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tokenId;

/** 银行卡Id */
@property(nonatomic, readwrite) uint64_t cardId;

/** 提现金额 */
@property(nonatomic, readwrite) float amount;

/** 支付密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *payPwd;

/** 时间戳，该值是ConfirmWithdrawalRsp返回的timeStamp */
@property(nonatomic, readwrite) uint64_t timeStamp;

/** 提现类型（1：普通、2：加急） */
@property(nonatomic, readwrite) int32_t withdrawType;

@end

#pragma mark - DLMWithdrawRsp

typedef GPB_ENUM(DLMWithdrawRsp_FieldNumber) {
  DLMWithdrawRsp_FieldNumber_TradeNo = 1,
};

/**
 * 提现响应报文
 **/
GPB_FINAL @interface DLMWithdrawRsp : GPBMessage

/** 交易单号  -- 2017113023444200103030333333 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeNo;

@end

#pragma mark - DLMTradeListReq

typedef GPB_ENUM(DLMTradeListReq_FieldNumber) {
  DLMTradeListReq_FieldNumber_LastTradeId = 1,
  DLMTradeListReq_FieldNumber_Year = 2,
  DLMTradeListReq_FieldNumber_Month = 3,
  DLMTradeListReq_FieldNumber_TradeType = 4,
};

/**
 * 交易列表（EventType.TradeList）
 **/
GPB_FINAL @interface DLMTradeListReq : GPBMessage

/** 交易Id，取TradeInfoRsp.tradeId */
@property(nonatomic, readwrite) uint64_t lastTradeId;

/** 年份   -- 2021 */
@property(nonatomic, readwrite) int32_t year;

/** 月份   -- 11 */
@property(nonatomic, readwrite) int32_t month;

/** 交易类型（0、全部、100：充值、200：提现、300：收入、400：支出、500：退款） */
@property(nonatomic, readwrite) int32_t tradeType;

@end

#pragma mark - DLMTradeListRsp

typedef GPB_ENUM(DLMTradeListRsp_FieldNumber) {
  DLMTradeListRsp_FieldNumber_TradeGroupsArray = 1,
};

/**
 * 交易列表应答报文
 **/
GPB_FINAL @interface DLMTradeListRsp : GPBMessage

/** 交易列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMTradeGroupInfoRsp*> *tradeGroupsArray;
/** The number of items in @c tradeGroupsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tradeGroupsArray_Count;

@end

#pragma mark - DLMTradeGroupInfoRsp

typedef GPB_ENUM(DLMTradeGroupInfoRsp_FieldNumber) {
  DLMTradeGroupInfoRsp_FieldNumber_Month = 1,
  DLMTradeGroupInfoRsp_FieldNumber_TradesArray = 2,
};

/**
 * 交易应答报文
 **/
GPB_FINAL @interface DLMTradeGroupInfoRsp : GPBMessage

/** 月份   -- 当年11月，非当前则2020年11月 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *month;

/** 备注 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMTradeInfoRsp*> *tradesArray;
/** The number of items in @c tradesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tradesArray_Count;

@end

#pragma mark - DLMTradeInfoRsp

typedef GPB_ENUM(DLMTradeInfoRsp_FieldNumber) {
  DLMTradeInfoRsp_FieldNumber_TradeId = 1,
  DLMTradeInfoRsp_FieldNumber_TradeNo = 2,
  DLMTradeInfoRsp_FieldNumber_FaceURL = 3,
  DLMTradeInfoRsp_FieldNumber_TradeName = 4,
  DLMTradeInfoRsp_FieldNumber_TradeType = 5,
  DLMTradeInfoRsp_FieldNumber_Amount = 6,
  DLMTradeInfoRsp_FieldNumber_TradeTime = 7,
  DLMTradeInfoRsp_FieldNumber_TradeStatus = 8,
  DLMTradeInfoRsp_FieldNumber_Remarks = 9,
};

/**
 * 交易应答报文
 **/
GPB_FINAL @interface DLMTradeInfoRsp : GPBMessage

/** 交易Id */
@property(nonatomic, readwrite) uint64_t tradeId;

/** 交易单号     -- 2017113023444200103030333333 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeNo;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *faceURL;

/** 交易名称     -- 充值-中国建设银行（5710） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeName;

/** 交易类型（100：充值、200：提现、300：收入、400：支出、500：退款） */
@property(nonatomic, readwrite) int32_t tradeType;

/** 交易金额     -159、+245 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *amount;

/** 交易时间     -- 07-30 16：00 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeTime;

/** 交易状态     -- 退款成功、受理中、退款失败 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeStatus;

/** 备注 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remarks;

@end

#pragma mark - DLMTradeBillReq

typedef GPB_ENUM(DLMTradeBillReq_FieldNumber) {
  DLMTradeBillReq_FieldNumber_TradeNo = 1,
};

/**
 * 交易账单（EventType.TradeBill）
 **/
GPB_FINAL @interface DLMTradeBillReq : GPBMessage

/** 交易单号 -- 2017113023444200103030333333 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeNo;

@end

#pragma mark - DLMTradeBillRsp

typedef GPB_ENUM(DLMTradeBillRsp_FieldNumber) {
  DLMTradeBillRsp_FieldNumber_TradeNo = 1,
  DLMTradeBillRsp_FieldNumber_Amount = 2,
  DLMTradeBillRsp_FieldNumber_TradeName = 3,
  DLMTradeBillRsp_FieldNumber_TradeType = 4,
  DLMTradeBillRsp_FieldNumber_TradeStatus = 5,
  DLMTradeBillRsp_FieldNumber_TradeDesc = 6,
  DLMTradeBillRsp_FieldNumber_Remarks = 7,
  DLMTradeBillRsp_FieldNumber_TradeTime = 8,
  DLMTradeBillRsp_FieldNumber_FlowStatusArray = 9,
  DLMTradeBillRsp_FieldNumber_TopUp = 20,
  DLMTradeBillRsp_FieldNumber_Withdraw = 30,
  DLMTradeBillRsp_FieldNumber_Income = 40,
  DLMTradeBillRsp_FieldNumber_Expense = 50,
  DLMTradeBillRsp_FieldNumber_Refund = 60,
};

typedef GPB_ENUM(DLMTradeBillRsp_Trade_OneOfCase) {
  DLMTradeBillRsp_Trade_OneOfCase_GPBUnsetOneOfCase = 0,
  DLMTradeBillRsp_Trade_OneOfCase_TopUp = 20,
  DLMTradeBillRsp_Trade_OneOfCase_Withdraw = 30,
  DLMTradeBillRsp_Trade_OneOfCase_Income = 40,
  DLMTradeBillRsp_Trade_OneOfCase_Expense = 50,
  DLMTradeBillRsp_Trade_OneOfCase_Refund = 60,
};

/**
 * 交易账单应答报文
 **/
GPB_FINAL @interface DLMTradeBillRsp : GPBMessage

/** 交易单号     -- 2017113023444200103030333333 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeNo;

/** 交易金额     -1590、+3451 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *amount;

/** 交易名称     -- 充值-中国建设银行（5710） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeName;

/** 交易类型（100：充值、200：提现、300：收入、400：支出、500：退款） */
@property(nonatomic, readwrite) int32_t tradeType;

/** 交易状态     -- 退款成功、受理中、退款失败 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeStatus;

/** 商品说明 -- U窝青年公寓1103室 (2017.05.01—2017.08.01）首期账单 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeDesc;

/** 备注     -- 充值 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remarks;

/** 交易时间 -- 2017-11-30 16:09 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeTime;

/** 交易流转状态列表 -- 目前只针对充值、提现 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMTradeFlowStatusRsp*> *flowStatusArray;
/** The number of items in @c flowStatusArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger flowStatusArray_Count;

/** 交易账单 */
@property(nonatomic, readonly) DLMTradeBillRsp_Trade_OneOfCase tradeOneOfCase;

/** 充值明细响应报文 */
@property(nonatomic, readwrite, strong, null_resettable) DLMTopUpDetailsRsp *topUp;

/** 提现明细响应报文 */
@property(nonatomic, readwrite, strong, null_resettable) DLMWithdrawDetailsRsp *withdraw;

/** 收款(收入)明细响应报文 */
@property(nonatomic, readwrite, strong, null_resettable) DLMIncomeDetailsRsp *income;

/** 付款(支出)明细响应报文 */
@property(nonatomic, readwrite, strong, null_resettable) DLMExpenseDetailsRsp *expense;

/** 退款明细响应报文 */
@property(nonatomic, readwrite, strong, null_resettable) DLMRefundDetailsRsp *refund;

@end

/**
 * Clears whatever value was set for the oneof 'trade'.
 **/
void DLMTradeBillRsp_ClearTradeOneOfCase(DLMTradeBillRsp *message);

#pragma mark - DLMTopUpDetailsRsp

typedef GPB_ENUM(DLMTopUpDetailsRsp_FieldNumber) {
  DLMTopUpDetailsRsp_FieldNumber_PayType = 1,
};

/**
 * 充值明细响应报文，充值状态 -- 申请已提交、受理中、银行处理、交易成功、交易失败
 **/
GPB_FINAL @interface DLMTopUpDetailsRsp : GPBMessage

/** 支付方式 -- 快捷支付 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *payType;

@end

#pragma mark - DLMWithdrawDetailsRsp

typedef GPB_ENUM(DLMWithdrawDetailsRsp_FieldNumber) {
  DLMWithdrawDetailsRsp_FieldNumber_ServiceFee = 1,
  DLMWithdrawDetailsRsp_FieldNumber_WithdrawAccount = 2,
  DLMWithdrawDetailsRsp_FieldNumber_WithdrawType = 3,
  DLMWithdrawDetailsRsp_FieldNumber_ActualAmount = 4,
};

/**
 * 提现明细响应报文，提现状态 -- 申请已提交、受理中、银行处理、交易成功、交易失败
 **/
GPB_FINAL @interface DLMWithdrawDetailsRsp : GPBMessage

/** 手续费   -- 2.00元 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serviceFee;

/** 提现账号 -- 中国建设银行（5230） *咕咕 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *withdrawAccount;

/** 提现类型 -- 普通 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *withdrawType;

/** 实际到账金额 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *actualAmount;

@end

#pragma mark - DLMIncomeDetailsRsp

typedef GPB_ENUM(DLMIncomeDetailsRsp_FieldNumber) {
  DLMIncomeDetailsRsp_FieldNumber_MerchantNo = 1,
  DLMIncomeDetailsRsp_FieldNumber_FaceURL = 2,
  DLMIncomeDetailsRsp_FieldNumber_UserName = 3,
  DLMIncomeDetailsRsp_FieldNumber_IncomeAccount = 4,
  DLMIncomeDetailsRsp_FieldNumber_PayType = 5,
};

/**
 * 收款(收入)明细响应报文，收款状态 -- 交易成功、交易失败
 **/
GPB_FINAL @interface DLMIncomeDetailsRsp : GPBMessage

/** 商户订单号  -- 2017113023444200103030333333 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *merchantNo;

/** 付款用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *faceURL;

/** 付款用户名   -- 张大妈 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;

/** 付款账号 -- 152********2 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *incomeAccount;

/** 支付方式 -- 微信支付 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *payType;

@end

#pragma mark - DLMExpenseDetailsRsp

typedef GPB_ENUM(DLMExpenseDetailsRsp_FieldNumber) {
  DLMExpenseDetailsRsp_FieldNumber_MerchantNo = 1,
  DLMExpenseDetailsRsp_FieldNumber_FaceURL = 2,
  DLMExpenseDetailsRsp_FieldNumber_UserName = 3,
  DLMExpenseDetailsRsp_FieldNumber_ExpenseType = 4,
  DLMExpenseDetailsRsp_FieldNumber_ExtendId = 5,
  DLMExpenseDetailsRsp_FieldNumber_PayType = 6,
  DLMExpenseDetailsRsp_FieldNumber_RefundsArray = 7,
};

/**
 * 付款(支出)明细响应报文，付款状态 -- 交易成功、交易失败
 **/
GPB_FINAL @interface DLMExpenseDetailsRsp : GPBMessage

/** 商户订单号  -- 2017113023444200103030333333 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *merchantNo;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *faceURL;

/** 收款用户名   -- 张大妈 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;

/** 支出类型（1：红包） */
@property(nonatomic, readwrite) int32_t expenseType;

/** 当expenseType为1时为红包Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *extendId;

/** 支付方式 -- 余额 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *payType;

/** 退款流水 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMRefundFlowRsp*> *refundsArray;
/** The number of items in @c refundsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger refundsArray_Count;

@end

#pragma mark - DLMRefundFlowRsp

typedef GPB_ENUM(DLMRefundFlowRsp_FieldNumber) {
  DLMRefundFlowRsp_FieldNumber_TradeNo = 1,
  DLMRefundFlowRsp_FieldNumber_RefundStatus = 2,
  DLMRefundFlowRsp_FieldNumber_RefundAmount = 3,
};

/**
 * 退款流水
 **/
GPB_FINAL @interface DLMRefundFlowRsp : GPBMessage

/** 交易单号     -- 2017113023444200103030333333 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeNo;

/** 退款状态 -- 已退款 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *refundStatus;

/** 退款金额 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *refundAmount;

@end

#pragma mark - DLMRefundDetailsRsp

typedef GPB_ENUM(DLMRefundDetailsRsp_FieldNumber) {
  DLMRefundDetailsRsp_FieldNumber_OrigTradeNo = 1,
  DLMRefundDetailsRsp_FieldNumber_FaceURL = 2,
  DLMRefundDetailsRsp_FieldNumber_UserName = 3,
  DLMRefundDetailsRsp_FieldNumber_RefundAccount = 4,
  DLMRefundDetailsRsp_FieldNumber_RefundMethod = 5,
  DLMRefundDetailsRsp_FieldNumber_RefundTime = 6,
  DLMRefundDetailsRsp_FieldNumber_RefundStatus = 7,
};

/**
 * 退款明细响应报文，退款状态 -- 退款成功、退款失败
 **/
GPB_FINAL @interface DLMRefundDetailsRsp : GPBMessage

/** 原交易单号 -- 2017113023444200103030333333 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *origTradeNo;

/** 退款用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *faceURL;

/** 退款用户名   -- 张大妈 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;

/** 退款账号 -- 152********2 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *refundAccount;

/** 退款方式 -- 余额 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *refundMethod;

/** 退款时间 -- 2017-11-30 16:09 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *refundTime;

/** 退款状态     -- 全额退款、部分退款 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *refundStatus;

@end

#pragma mark - DLMTradeFlowStatusRsp

typedef GPB_ENUM(DLMTradeFlowStatusRsp_FieldNumber) {
  DLMTradeFlowStatusRsp_FieldNumber_TradeStatus = 1,
  DLMTradeFlowStatusRsp_FieldNumber_Progress = 2,
  DLMTradeFlowStatusRsp_FieldNumber_TradeTime = 3,
  DLMTradeFlowStatusRsp_FieldNumber_Remarks = 4,
};

/**
 * 交易流转状态
 **/
GPB_FINAL @interface DLMTradeFlowStatusRsp : GPBMessage

/** 交易状态 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeStatus;

/** 处理进度（1：已处理、2：待处理、3：已完成、4：失败） */
@property(nonatomic, readwrite) int32_t progress;

/** 交易时间 -- 2017-11-30 16:09 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeTime;

/** 备注 -- 如果失败，则显示失败原因 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remarks;

@end

#pragma mark - DLMTradeTypeReq

/**
 * 交易类型（EventType.TradeType）
 **/
GPB_FINAL @interface DLMTradeTypeReq : GPBMessage

@end

#pragma mark - DLMTradeTypeListRsp

typedef GPB_ENUM(DLMTradeTypeListRsp_FieldNumber) {
  DLMTradeTypeListRsp_FieldNumber_TradeTypesArray = 1,
};

/**
 * 交易类型列表响应报文
 **/
GPB_FINAL @interface DLMTradeTypeListRsp : GPBMessage

/** 交易类型列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMTradeTypeInfoRsp*> *tradeTypesArray;
/** The number of items in @c tradeTypesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tradeTypesArray_Count;

@end

#pragma mark - DLMTradeTypeInfoRsp

typedef GPB_ENUM(DLMTradeTypeInfoRsp_FieldNumber) {
  DLMTradeTypeInfoRsp_FieldNumber_TradeType = 1,
  DLMTradeTypeInfoRsp_FieldNumber_TradeTypeName = 2,
};

/**
 * 交易类型响应报文
 **/
GPB_FINAL @interface DLMTradeTypeInfoRsp : GPBMessage

/** 交易类型（0：全部、100：充值、200：提现、300：收入、400：支出、500：退款） */
@property(nonatomic, readwrite) int32_t tradeType;

/** 交易类型名称     -- */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeTypeName;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
