// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufUser.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DLMRegionInfoRsp;
@class DLMUserDeviceInfoRsp;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - DLMProtobufUserRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface DLMProtobufUserRoot : GPBRootObject
@end

#pragma mark - DLMUserLoginReq

typedef GPB_ENUM(DLMUserLoginReq_FieldNumber) {
  DLMUserLoginReq_FieldNumber_AuthId = 1,
  DLMUserLoginReq_FieldNumber_Mobile = 2,
  DLMUserLoginReq_FieldNumber_LoginType = 3,
  DLMUserLoginReq_FieldNumber_ValidId = 4,
  DLMUserLoginReq_FieldNumber_VerifCode = 5,
};

/**
 * 登陆（EventType.Login）
 **/
GPB_FINAL @interface DLMUserLoginReq : GPBMessage

/** 授权Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *authId;

/** 用户手机号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mobile;

/** 登陆类型（1：手机号、2：微信、3：支付宝） */
@property(nonatomic, readwrite) int32_t loginType;

/** 验证码授权Id（当时获取验证码返回的validId） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *validId;

/** 手机验证码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *verifCode;

@end

#pragma mark - DLMUserLogoutReq

/**
 * 登出（EventType.Logout）
 **/
GPB_FINAL @interface DLMUserLogoutReq : GPBMessage

@end

#pragma mark - DLMModifyUserHeadImgReq

typedef GPB_ENUM(DLMModifyUserHeadImgReq_FieldNumber) {
  DLMModifyUserHeadImgReq_FieldNumber_HeadImg = 1,
};

/**
 * 修改用户头像（EventType.UserHeadImg）
 **/
GPB_FINAL @interface DLMModifyUserHeadImgReq : GPBMessage

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *headImg;

@end

#pragma mark - DLMModifyUserMobileReq

typedef GPB_ENUM(DLMModifyUserMobileReq_FieldNumber) {
  DLMModifyUserMobileReq_FieldNumber_Mobile = 1,
  DLMModifyUserMobileReq_FieldNumber_ValidId = 2,
  DLMModifyUserMobileReq_FieldNumber_VerifCode = 3,
};

/**
 * 修改用户手机号（EventType.UserMobile）
 **/
GPB_FINAL @interface DLMModifyUserMobileReq : GPBMessage

/** 用户手机号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mobile;

/** 验证码Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *validId;

/** 验证码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *verifCode;

@end

#pragma mark - DLMModifyHeadImgAndNickNameReq

typedef GPB_ENUM(DLMModifyHeadImgAndNickNameReq_FieldNumber) {
  DLMModifyHeadImgAndNickNameReq_FieldNumber_HeadImg = 1,
  DLMModifyHeadImgAndNickNameReq_FieldNumber_NickName = 2,
};

/**
 * 修改用户头像或昵称（EventType.HeadImgAndNickName）
 **/
GPB_FINAL @interface DLMModifyHeadImgAndNickNameReq : GPBMessage

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *headImg;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

@end

#pragma mark - DLMModifyUserNickNameReq

typedef GPB_ENUM(DLMModifyUserNickNameReq_FieldNumber) {
  DLMModifyUserNickNameReq_FieldNumber_NickName = 1,
};

/**
 * 修改用户昵称（EventType.UserNickName）
 **/
GPB_FINAL @interface DLMModifyUserNickNameReq : GPBMessage

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

@end

#pragma mark - DLMModifyUserSexReq

typedef GPB_ENUM(DLMModifyUserSexReq_FieldNumber) {
  DLMModifyUserSexReq_FieldNumber_Sex = 1,
};

/**
 * 修改用户性别（EventType.UserSex）
 **/
GPB_FINAL @interface DLMModifyUserSexReq : GPBMessage

/** 用户性别：0 - 隐藏，1 - 男性，2 - 女性 */
@property(nonatomic, readwrite) int32_t sex;

@end

#pragma mark - DLMModifyUserSignReq

typedef GPB_ENUM(DLMModifyUserSignReq_FieldNumber) {
  DLMModifyUserSignReq_FieldNumber_Sign = 1,
};

/**
 * 修改用户签名（EventType.UserSign）
 **/
GPB_FINAL @interface DLMModifyUserSignReq : GPBMessage

/** 用户签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;

@end

#pragma mark - DLMModifyUserRegionReq

typedef GPB_ENUM(DLMModifyUserRegionReq_FieldNumber) {
  DLMModifyUserRegionReq_FieldNumber_RegionId = 1,
};

/**
 * 修改用户地区（EventType.UserRegion）
 **/
GPB_FINAL @interface DLMModifyUserRegionReq : GPBMessage

/** 设置地区 */
@property(nonatomic, readwrite) int32_t regionId;

@end

#pragma mark - DLMNotifySetupReq

/**
 * 通知设置（EventType.NotifySetup）
 **/
GPB_FINAL @interface DLMNotifySetupReq : GPBMessage

@end

#pragma mark - DLMNotifySetupRsp

typedef GPB_ENUM(DLMNotifySetupRsp_FieldNumber) {
  DLMNotifySetupRsp_FieldNumber_Sound = 1,
  DLMNotifySetupRsp_FieldNumber_Vibrate = 2,
};

/**
 * 响应通知设置信息
 **/
GPB_FINAL @interface DLMNotifySetupRsp : GPBMessage

/** 声音（0：关、1：开） */
@property(nonatomic, readwrite) int32_t sound;

/** 振动（0：关、1：开） */
@property(nonatomic, readwrite) int32_t vibrate;

@end

#pragma mark - DLMUserSoundReq

typedef GPB_ENUM(DLMUserSoundReq_FieldNumber) {
  DLMUserSoundReq_FieldNumber_Sound = 1,
};

/**
 * 声音（0：关、1：开）（EventType.Sound）
 **/
GPB_FINAL @interface DLMUserSoundReq : GPBMessage

/** 声音（0：关、1：开） */
@property(nonatomic, readwrite) int32_t sound;

@end

#pragma mark - DLMUserVibrateReq

typedef GPB_ENUM(DLMUserVibrateReq_FieldNumber) {
  DLMUserVibrateReq_FieldNumber_Vibrate = 1,
};

/**
 * 振动（0：关、1：开）（EventType.Vibrate）
 **/
GPB_FINAL @interface DLMUserVibrateReq : GPBMessage

/** 修改振动（0：关、1：开） */
@property(nonatomic, readwrite) int32_t vibrate;

@end

#pragma mark - DLMUserInfoReq

/**
 * 用户信息（EventType.UserInfo）
 **/
GPB_FINAL @interface DLMUserInfoReq : GPBMessage

@end

#pragma mark - DLMUserInfoRsp

typedef GPB_ENUM(DLMUserInfoRsp_FieldNumber) {
  DLMUserInfoRsp_FieldNumber_UserId = 1,
  DLMUserInfoRsp_FieldNumber_OpenId = 2,
  DLMUserInfoRsp_FieldNumber_NickName = 3,
  DLMUserInfoRsp_FieldNumber_Email = 4,
  DLMUserInfoRsp_FieldNumber_RegionId = 5,
  DLMUserInfoRsp_FieldNumber_RegionName = 6,
  DLMUserInfoRsp_FieldNumber_Sign = 7,
  DLMUserInfoRsp_FieldNumber_Sex = 8,
  DLMUserInfoRsp_FieldNumber_SexValue = 9,
  DLMUserInfoRsp_FieldNumber_HeadImg = 10,
  DLMUserInfoRsp_FieldNumber_QrCode = 11,
  DLMUserInfoRsp_FieldNumber_Mobile = 12,
  DLMUserInfoRsp_FieldNumber_Sound = 13,
  DLMUserInfoRsp_FieldNumber_Vibrate = 14,
  DLMUserInfoRsp_FieldNumber_PayPwd = 15,
  DLMUserInfoRsp_FieldNumber_UserName = 16,
};

/**
 * 响应用户信息
 **/
GPB_FINAL @interface DLMUserInfoRsp : GPBMessage

/** 用户userId */
@property(nonatomic, readwrite) uint64_t userId;

/** 用户openId */
@property(nonatomic, readwrite, copy, null_resettable) NSString *openId;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

/** 电子邮件 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *email;

/** 地区Id */
@property(nonatomic, readwrite) int32_t regionId;

/** 地区名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *regionName;

/** 个性签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;

/** 性别（保密、男、女） */
@property(nonatomic, readwrite) int32_t sex;

/** 性别对应的值 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sexValue;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *headImg;

/** 二维码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qrCode;

/** 手机号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mobile;

/** 声音（0：关、1：开） */
@property(nonatomic, readwrite) int32_t sound;

/** 振动（0：关、1：开） */
@property(nonatomic, readwrite) int32_t vibrate;

/** 支付密码（false：未设置支付密码、true：已设置支付密码） */
@property(nonatomic, readwrite) BOOL payPwd;

/** 用户真实姓名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;

@end

#pragma mark - DLMModifyPayPwdReq

typedef GPB_ENUM(DLMModifyPayPwdReq_FieldNumber) {
  DLMModifyPayPwdReq_FieldNumber_PayPwd = 1,
  DLMModifyPayPwdReq_FieldNumber_CertifyId = 2,
};

/**
 * 修改用户支付密码（EventType.UserPayPwd）
 **/
GPB_FINAL @interface DLMModifyPayPwdReq : GPBMessage

/** 支付密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *payPwd;

/** 认证Id（取CheckVerifyCodeRsp》certifyId） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *certifyId;

@end

#pragma mark - DLMUserWalletAmountReq

/**
 * 用户钱包余额（EventType.UserWalletAmount）
 **/
GPB_FINAL @interface DLMUserWalletAmountReq : GPBMessage

@end

#pragma mark - DLMUserWalletAmountRsp

typedef GPB_ENUM(DLMUserWalletAmountRsp_FieldNumber) {
  DLMUserWalletAmountRsp_FieldNumber_Amount = 1,
};

/**
 * 用户钱包余额
 **/
GPB_FINAL @interface DLMUserWalletAmountRsp : GPBMessage

/** 钱包余额 */
@property(nonatomic, readwrite) float amount;

@end

#pragma mark - DLMUserPrivacyAddMyWayReq

/**
 * 加我的方式（EventType.AddMyWay）
 **/
GPB_FINAL @interface DLMUserPrivacyAddMyWayReq : GPBMessage

@end

#pragma mark - DLMUserPrivacyAddMyWayInfoRsp

typedef GPB_ENUM(DLMUserPrivacyAddMyWayInfoRsp_FieldNumber) {
  DLMUserPrivacyAddMyWayInfoRsp_FieldNumber_Mobile = 1,
  DLMUserPrivacyAddMyWayInfoRsp_FieldNumber_ExtCircleId = 2,
  DLMUserPrivacyAddMyWayInfoRsp_FieldNumber_ContactCard = 3,
  DLMUserPrivacyAddMyWayInfoRsp_FieldNumber_QrCode = 4,
  DLMUserPrivacyAddMyWayInfoRsp_FieldNumber_Nearby = 5,
};

/**
 * 加我的方式响应信息
 **/
GPB_FINAL @interface DLMUserPrivacyAddMyWayInfoRsp : GPBMessage

/** 手机号（0：关、1：开） */
@property(nonatomic, readwrite) int32_t mobile;

/** 奢圈Id（0：关、1：开） */
@property(nonatomic, readwrite) int32_t extCircleId;

/** 个人名片（0：关、1：开） */
@property(nonatomic, readwrite) int32_t contactCard;

/** 二维码（0：关、1：开） */
@property(nonatomic, readwrite) int32_t qrCode;

/** 附近（0：关、1：开） */
@property(nonatomic, readwrite) int32_t nearby;

@end

#pragma mark - DLMModifyMyWayTypeReq

typedef GPB_ENUM(DLMModifyMyWayTypeReq_FieldNumber) {
  DLMModifyMyWayTypeReq_FieldNumber_MyWayType = 1,
  DLMModifyMyWayTypeReq_FieldNumber_TypeVal = 2,
};

/**
 * 修改加我的方式类型（EventType.ModifyMyWayType）
 **/
GPB_FINAL @interface DLMModifyMyWayTypeReq : GPBMessage

/**
 * *
 * 加我的方式
 * 1、手机号（0：关、1：开）
 * 2、奢圈Id（0：关、1：开）
 * 3、个人名片（0：关、1：开）
 * 4、二维码（0：关、1：开）
 * 5、附近（0：关、1：开）
 **/
@property(nonatomic, readwrite) int32_t myWayType;

/** 0：关、1：开 */
@property(nonatomic, readwrite) int32_t typeVal;

@end

#pragma mark - DLMRegionLevelListReq

typedef GPB_ENUM(DLMRegionLevelListReq_FieldNumber) {
  DLMRegionLevelListReq_FieldNumber_RegionLevel = 1,
  DLMRegionLevelListReq_FieldNumber_RegionParentId = 2,
};

/**
 * 获取地区级别列表（EventType.RegionLevelList）
 **/
GPB_FINAL @interface DLMRegionLevelListReq : GPBMessage

/**
 * *
 * 地区级别
 * 1-国家
 * 2-省、自治区、直辖市
 * 3-地级市、地区、自治州、盟
 * 4-市辖区、县级市、县
 **/
@property(nonatomic, readwrite) int32_t regionLevel;

/** 地区主键Id */
@property(nonatomic, readwrite) int32_t regionParentId;

@end

#pragma mark - DLMSubRegionListReq

typedef GPB_ENUM(DLMSubRegionListReq_FieldNumber) {
  DLMSubRegionListReq_FieldNumber_RegionParentId = 1,
};

/**
 * 子地区列表（EventType.SubRegionList）
 **/
GPB_FINAL @interface DLMSubRegionListReq : GPBMessage

/** 地区父Id */
@property(nonatomic, readwrite) int32_t regionParentId;

@end

#pragma mark - DLMRegionListRsp

typedef GPB_ENUM(DLMRegionListRsp_FieldNumber) {
  DLMRegionListRsp_FieldNumber_RegionsArray = 1,
};

/**
 * 地区列表
 **/
GPB_FINAL @interface DLMRegionListRsp : GPBMessage

/** 地区列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMRegionInfoRsp*> *regionsArray;
/** The number of items in @c regionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger regionsArray_Count;

@end

#pragma mark - DLMRegionInfoRsp

typedef GPB_ENUM(DLMRegionInfoRsp_FieldNumber) {
  DLMRegionInfoRsp_FieldNumber_RegionId = 1,
  DLMRegionInfoRsp_FieldNumber_RegionName = 2,
  DLMRegionInfoRsp_FieldNumber_RegionParentId = 3,
  DLMRegionInfoRsp_FieldNumber_RegionLevel = 4,
  DLMRegionInfoRsp_FieldNumber_SeqNo = 5,
  DLMRegionInfoRsp_FieldNumber_Status = 6,
  DLMRegionInfoRsp_FieldNumber_Checked = 7,
  DLMRegionInfoRsp_FieldNumber_ChildNode = 8,
};

/**
 * 地区信息（EventType.RegionInfo）
 **/
GPB_FINAL @interface DLMRegionInfoRsp : GPBMessage

/** 地区主键Id */
@property(nonatomic, readwrite) int32_t regionId;

/** 地区名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *regionName;

/** 地区父Id */
@property(nonatomic, readwrite) int32_t regionParentId;

/**
 * *
 * 地区级别
 * 1-国家
 * 2-省、自治区、直辖市
 * 3-地级市、地区、自治州、盟
 * 4-市辖区、县级市、县
 **/
@property(nonatomic, readwrite) int32_t regionLevel;

/** 排序号 */
@property(nonatomic, readwrite) int32_t seqNo;

/** 地区状态（0：禁用、1：启用） */
@property(nonatomic, readwrite) int32_t status;

/** 是否选中（false：未选中、true：选中） */
@property(nonatomic, readwrite) BOOL checked;

/** 是否存在子节点（false：未存在子节点、true：存在子节点） */
@property(nonatomic, readwrite) BOOL childNode;

@end

#pragma mark - DLMSyncUserDeviceReq

typedef GPB_ENUM(DLMSyncUserDeviceReq_FieldNumber) {
  DLMSyncUserDeviceReq_FieldNumber_DeviceId = 1,
  DLMSyncUserDeviceReq_FieldNumber_VersionId = 2,
  DLMSyncUserDeviceReq_FieldNumber_ClientType = 3,
  DLMSyncUserDeviceReq_FieldNumber_DeviceType = 4,
  DLMSyncUserDeviceReq_FieldNumber_SerialNum = 5,
  DLMSyncUserDeviceReq_FieldNumber_DeviceName = 6,
  DLMSyncUserDeviceReq_FieldNumber_Imei = 7,
  DLMSyncUserDeviceReq_FieldNumber_Meid = 8,
  DLMSyncUserDeviceReq_FieldNumber_UserAgent = 9,
};

/**
 * 同步用户设备号（EventType.SyncUserDevice）
 **/
GPB_FINAL @interface DLMSyncUserDeviceReq : GPBMessage

/** 客户端设备号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/** 客户端版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *versionId;

/** 客户端类型（1：IOS、2：Android） */
@property(nonatomic, readwrite) int32_t clientType;

/** 设备类型，如：iPhone iOS 14.4.2、android-29、Windows 7、iPhone iOS 10.3.3 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;

/** 客户端序列号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serialNum;

/** 设备名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;

/** Ios imei */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;

/** Ios meid */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meid;

/** 如：YI-CHAT/1.0.0 (Android;7.0;honor;FRD-AL00) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userAgent;

@end

#pragma mark - DLMUserDeviceListReq

/**
 * 用户设备列表（EventType.UserDeviceList）
 **/
GPB_FINAL @interface DLMUserDeviceListReq : GPBMessage

@end

#pragma mark - DLMUserDeviceListRsp

typedef GPB_ENUM(DLMUserDeviceListRsp_FieldNumber) {
  DLMUserDeviceListRsp_FieldNumber_DevicesArray = 1,
};

/**
 * 用户设备列表
 **/
GPB_FINAL @interface DLMUserDeviceListRsp : GPBMessage

/** 用户设备列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DLMUserDeviceInfoRsp*> *devicesArray;
/** The number of items in @c devicesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger devicesArray_Count;

@end

#pragma mark - DLMUserDeviceInfoRsp

typedef GPB_ENUM(DLMUserDeviceInfoRsp_FieldNumber) {
  DLMUserDeviceInfoRsp_FieldNumber_DeviceId = 1,
  DLMUserDeviceInfoRsp_FieldNumber_DeviceName = 2,
  DLMUserDeviceInfoRsp_FieldNumber_DeviceType = 3,
  DLMUserDeviceInfoRsp_FieldNumber_LastLoginTime = 4,
};

/**
 * 用户设备信息
 **/
GPB_FINAL @interface DLMUserDeviceInfoRsp : GPBMessage

/** 设备主键Id */
@property(nonatomic, readwrite) uint64_t deviceId;

/** 设备名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;

/** 设备类型，如：iPhone iOS 14.4.2、android-29、Windows 7、iPhone iOS 10.3.3 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;

/** 最后登录时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lastLoginTime;

@end

#pragma mark - DLMDelUserDeviceReq

typedef GPB_ENUM(DLMDelUserDeviceReq_FieldNumber) {
  DLMDelUserDeviceReq_FieldNumber_DeviceId = 1,
};

/**
 * 删除用户设备（EventType.DelUserDevice）
 **/
GPB_FINAL @interface DLMDelUserDeviceReq : GPBMessage

/** 设备主键Id */
@property(nonatomic, readwrite) uint64_t deviceId;

@end

#pragma mark - DLMUserDeviceNameReq

typedef GPB_ENUM(DLMUserDeviceNameReq_FieldNumber) {
  DLMUserDeviceNameReq_FieldNumber_DeviceId = 1,
  DLMUserDeviceNameReq_FieldNumber_DeviceName = 2,
};

/**
 * 修改设备名称（EventType.UserDeviceName）
 **/
GPB_FINAL @interface DLMUserDeviceNameReq : GPBMessage

/** 设备主键Id */
@property(nonatomic, readwrite) uint64_t deviceId;

/** 设备名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;

@end

#pragma mark - DLMRealNameAuthInfoReq

/**
 * 获取实名认证信息（EventType.RealNameAuthInfo）
 **/
GPB_FINAL @interface DLMRealNameAuthInfoReq : GPBMessage

@end

#pragma mark - DLMRealNameAuthInfoRsp

typedef GPB_ENUM(DLMRealNameAuthInfoRsp_FieldNumber) {
  DLMRealNameAuthInfoRsp_FieldNumber_UserName = 1,
  DLMRealNameAuthInfoRsp_FieldNumber_CertType = 2,
  DLMRealNameAuthInfoRsp_FieldNumber_CertNo = 3,
  DLMRealNameAuthInfoRsp_FieldNumber_Sex = 4,
  DLMRealNameAuthInfoRsp_FieldNumber_NationalityId = 5,
  DLMRealNameAuthInfoRsp_FieldNumber_StartTime = 6,
  DLMRealNameAuthInfoRsp_FieldNumber_EndTime = 7,
  DLMRealNameAuthInfoRsp_FieldNumber_AuthStatus = 8,
};

/**
 * 应答实名认证信息
 **/
GPB_FINAL @interface DLMRealNameAuthInfoRsp : GPBMessage

/** 真实姓名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;

/** 证件类型：（1、身份证号） */
@property(nonatomic, readwrite) int32_t certType;

/** 证件号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *certNo;

/** 性别（0：保密、1：男、2：女） */
@property(nonatomic, readwrite) int32_t sex;

/** 国籍Id */
@property(nonatomic, readwrite) int32_t nationalityId;

/** 证件有效开始时间 */
@property(nonatomic, readwrite) uint64_t startTime;

/** 证件有效结束时间 */
@property(nonatomic, readwrite) uint64_t endTime;

/** 实名认证状态（0：未认证、1：认证失败、2：认证成功） */
@property(nonatomic, readwrite) int32_t authStatus;

@end

#pragma mark - DLMFaceVerifyReq

typedef GPB_ENUM(DLMFaceVerifyReq_FieldNumber) {
  DLMFaceVerifyReq_FieldNumber_UserName = 1,
  DLMFaceVerifyReq_FieldNumber_CertType = 2,
  DLMFaceVerifyReq_FieldNumber_CertNo = 3,
  DLMFaceVerifyReq_FieldNumber_MetaInfo = 4,
};

/**
 * 人脸认证（EventType.FaceVerify）
 **/
GPB_FINAL @interface DLMFaceVerifyReq : GPBMessage

/** 真实姓名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;

/** 证件类型：（1、身份证号） */
@property(nonatomic, readwrite) int32_t certType;

/** 证件号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *certNo;

/** Metainfo 环境参数，需要通过客户端 SDK 获取（https://help.aliyun.com/document_detail/160546.html） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *metaInfo;

@end

#pragma mark - DLMFaceVerifyRsp

typedef GPB_ENUM(DLMFaceVerifyRsp_FieldNumber) {
  DLMFaceVerifyRsp_FieldNumber_CertifyId = 1,
};

GPB_FINAL @interface DLMFaceVerifyRsp : GPBMessage

/** 实人认证唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *certifyId;

@end

#pragma mark - DLMDescribeFaceVerifyReq

typedef GPB_ENUM(DLMDescribeFaceVerifyReq_FieldNumber) {
  DLMDescribeFaceVerifyReq_FieldNumber_CertifyId = 1,
};

/**
 * 查询认证结果（EventType.DescribeFaceVerify）
 **/
GPB_FINAL @interface DLMDescribeFaceVerifyReq : GPBMessage

/** 实人认证唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *certifyId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
